AWSTemplateFormatVersion: "2010-09-09"
Description: >
  CloudFormation template to create an Amazon RDS MySQL instance using the Free 
  Tier instance type with configurable networking and security options.

Parameters:
  VPC:
    Type: AWS::EC2::VPC::Id
    Description: "Select the VPC for the RDS instance."
    # Specifies the VPC where the RDS instance will be deployed.

  SubnetIds:
    Type: List<AWS::EC2::Subnet::Id>
    Description: "Select the subnet(s) for the RDS instance."
    # List of subnets where the RDS instance will be placed. RDS requires subnets across two AZs for high availability.

  DBInstanceClass:
    Type: String
    Default: db.t4g.micro
    AllowedValues:
      - db.t4g.micro
    Description: "Free Tier instance class for the RDS instance."
    # Limits the instance type to Free Tier-eligible db.t4g.micro.

  AllocatedStorage:
    Type: Number
    Default: 20
    Description: "Storage size in GB for the database."
    # Sets the storage for the RDS instance in GB. Default is 20GB to stay within Free Tier limits.

  DBName:
    Type: String
    Default: usernameDB
    Description: "Name of the MySQL database."
    # Defines the database name to create when the instance is launched.

  MasterUsername:
    Type: String
    Default: admin
    Description: "Master username for the MySQL database."
    # Sets the administrator username for accessing the database.

  MasterUserPassword:
    Type: String
    NoEcho: true
    Description: "Password for the master username."
    # Sets the password for the database administrator. NoEcho hides the password in CloudFormation logs.

  DBSubnetGroupName:
    Type: String
    Default: p3-username-dbsubnetgroup
    Description: "Name of the RDS subnet group."
    # Name for the subnet group associated with this RDS instance.

  DBParameterGroupName:
    Type: String
    Default: default.mysql8.0
    Description: "RDS parameter group for MySQL."
    # Specifies a parameter group to configure MySQL-specific settings.

  SecurityGroupIds:
    Type: List<AWS::EC2::SecurityGroup::Id>
    Description: "Security group(s) for the RDS instance."
    # Allows the user to select security groups to control RDS network access.

Resources:
  MyDBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: "Subnet group for RDS MySQL instance."
      SubnetIds: !Ref SubnetIds
    # Creates a DB subnet group with the specified subnets. RDS uses this group to place the instance across multiple AZs.

  MyRDSInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      DBInstanceClass: !Ref DBInstanceClass
      AllocatedStorage: !Ref AllocatedStorage
      DBName: !Ref DBName
      Engine: "mysql"
      EngineVersion: "8.0.39"
      MasterUsername: !Ref MasterUsername
      MasterUserPassword: !Ref MasterUserPassword
      VPCSecurityGroups: !Ref SecurityGroupIds
      DBSubnetGroupName: !Ref DBSubnetGroupName
      DBParameterGroupName: !Ref DBParameterGroupName
      MultiAZ: false
      PubliclyAccessible: false
    # Defines the RDS instance with settings specified through parameters:
    # - DBInstanceClass and AllocatedStorage set the instance type and storage size.
    # - DBName, MasterUsername, and MasterUserPassword set up the MySQL database and login credentials.
    # - VPCSecurityGroups and DBSubnetGroupName control network and availability settings.
    # - PubliclyAccessible is false to restrict access to within the VPC.

Outputs:
  RDSInstanceEndpoint:
    Description: "Connection endpoint for the RDS MySQL instance."
    Value: !GetAtt MyRDSInstance.Endpoint.Address
    # Outputs the endpoint URL to connect to the RDS instance.

  RDSInstancePort:
    Description: "Port number for the RDS MySQL instance."
    Value: !GetAtt MyRDSInstance.Endpoint.Port
    # Outputs the port number for MySQL (default 3306).
